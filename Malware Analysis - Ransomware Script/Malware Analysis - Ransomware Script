# Malware Analysis — Ransomware Script — Writeup

**Challenge:** Malware Analysis - Ransomware Script  
**Outils utiles :** éditeur de texte, `grep`, `strings`, `sha256sum`, environnement isolé (VM) pour toute exécution — ne pas exécuter sur un hôte de production.  
**Contexte :** Un script suspect récupéré depuis une machine web compromise (restore point avant chiffrement). Le script n'avait apparemment pas été exécuté — on a donc analysé statiquement pour extraire IOCs et comprendre le comportement.

---

## TL;DR
Le script est un ransomware shell-script-ish qui contacte un C2, installe utilitaires via `apt-get`/`yum`, modifie le message du jour (`/etc/motd`) avec une demande de rançon, parcourt et chiffre différents emplacements (SSH, fichiers grepés, /home, /root, bases de données), et ajoute une extension inhabituelle (`.☢`) aux fichiers chiffrés. Il héberge/consulte un petit fichier de contrôle sur le C2 pour savoir si poursuivre l'attaque.

---

## Méthode (courte)
1. Ouvrir le fichier dans un éditeur (vim/nano) — **ne pas exécuter**.  
2. Rechercher chaînes remarquables : adresses IP, URL, commandes système (`apt-get`, `yum`, `rm -rf /var/log/yum*`), motifs d’extension, fonctions `encrypt_*`.  
3. Extraire IOCs et ordonner fonctions observées dans le script pour comprendre le flux d’exécution.  
4. Documenter les artefacts à bloquer et recommandations.

---

## IOCs & Comportement observé
- **C2 / IP malveillant (référencé plusieurs fois) :** `185.141.25.168`  
- **URL de contrôle vérifiée par le script :** `http://185.141.25.168/check_attack/0.txt`  
- **Commande utilisée pour effacer logs yum :** `rm -rf /var/log/yum*`  
- **Fichier `/etc/motd` — début du message (3 premiers mots) :** `you were hacked`  
- **Email de contact affiché dans le message :** `nationalsiense@protonmail.com`  
- **Extension utilisée pour fichiers chiffrés :** `.☢`  
- **Séquence des fonctions d'encrypt exécutées (ordre réel) :**  
  1. `encrypt_ssh`  
  2. `encrypt_grep_files`  
  3. `encrypt_home`  
  4. `encrypt_root`  
  5. `encrypt_db`

---

## Questions & Réponses (format challenge)

- **What is the malicious IP address referenced multiple times in the script?**  
  **Answer:** `185.141.25.168`

- **What is the command line to remove the yum logs afterwards?**  
  **Answer:** `rm -rf /var/log/yum*`

- **A message is created in the file /etc/motd. What are the three first words?**  
  **Answer:** `you were hacked`

- **This message also contains a contact email address to have the system fixed. What is it?**  
  **Answer:** `nationalsiense@protonmail.com`

- **When files are encrypted, an unusual file extension is used. What is it?**  
  **Answer:** `.☢`

- **There are 5 functions associated with the encryption process that start with ‘encrypt’. What are they, in the order they’re actually executed in the script?**  
  **Answer:** `encrypt_ssh,encrypt_grep_files,encrypt_home,encrypt_root,encrypt_db`

- **The script will check a text file hosted on the C2 server. What is the full URL of this file?**  
  **Answer:** `http://185.141.25.168/check_attack/0.txt`

---

## Détection & chasse (hunting)
- Surveiller connexions sortantes vers `185.141.25.168` et URL similaires via proxy/DNS logs.  
- Alerter sur exécutions de commandes de suppression de logs (`rm -rf /var/log/yum*`) ou modifications de `/etc/motd`.  
- Détecter créations de fichiers avec l’extension non-ASCII/unicode (`.☢`) ou patterns de renommage en masse.  
- Rechercher processus ou scripts lançant `apt-get install`/`yum install` suivis d’actions d’IO intensives (chiffrement).  
- Sur endpoints, monitorer accès et modifications aux dossiers `/root`, `/home` et fichiers de configuration SSH.

---

## Remédiation & recommandations
- Isoler immédiatement la machine compromise du réseau.  
- Capturer image forensic avant toute remediation (logs, script, fichiers chiffrés/restores).  
- Révoquer/rotater credentials potentiellement compromis (SSH keys, comptes).  
- Bloquer IP/domaines malveillants dans DNS/proxy/firewall.  
- Durcir serveurs web : restreindre comptes ayant sudo, appliquer updates, surveiller dépôts de code/points de déploiement.  
- Mettre en place sauvegardes immutables et tester les procédures de restauration.

---

## Notes finales
Ce script montre un schéma classique de ransomware : présence d’un C2, effacement des traces, chiffrement ordonné des zones critiques, et message de rançon incluant adresse contact. Même si le fichier n’a pas été exécuté dans ce cas, sa récupération permet d’anticiper IOCs et d’améliorer les règles de détection pour éviter futures infections similaires.

